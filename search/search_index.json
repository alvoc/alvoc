{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"Alvoc  <p>Abundance learning for variants of concern</p> <p> Report Bug       |       Request Feature </p> <p>  Documentation  </p>"},{"location":"#overview","title":"Overview","text":"<p>Alvoc is a tool for estimating the abundace of variants of concern from wastewater sequencing data. Its predecessor is Alcov, an abundance learning tool for SARS-CoV-2 variants.</p> <p>In addition alvoc can also be used for:</p> <ul> <li>Determining the frequency of mutations of interest in BAM files</li> <li>Converting nucleotide and amino acid mutations for a particular virus</li> <li>Comparing amplicon GC content with its read depth (as a measure of degredation)</li> </ul>"},{"location":"#installation","title":"Installation","text":""},{"location":"#with-pip","title":"With Pip","text":"<p>Pip is the default package installer for Python.</p> <ol> <li> <p>Install Python. We recommend using pyenv for python version management.</p> </li> <li> <p>Install the latest version from pypi.</p> </li> </ol> <pre><code>pip install alvoc\n</code></pre>"},{"location":"#with-uv","title":"With UV","text":"<p>UV is a fast, all-in-one Python tool for dependency, version, and project management, replacing pip, poetry, and more.</p> <ol> <li>Install UV.</li> <li>Install the latest version from pypi.</li> </ol> <pre><code>uv add alvoc\n</code></pre> <p>Yes, including a Docker image under the installation section makes sense, especially for users who prefer containerized environments or need to integrate your tool into CI/CD pipelines. Here's how you can include it:</p>"},{"location":"#with-docker","title":"With Docker","text":"<p>For users who prefer containerized environments, an official Docker image is available on GitHub Container Registry (GHCR).</p> <ol> <li>Ensure you have Docker installed and running.</li> <li>Pull the latest Docker image:</li> </ol> <pre><code>docker pull ghcr.io/alvoc/alvoc:latest\n</code></pre> <ol> <li>Run the container:</li> </ol> <pre><code>docker run --rm -it ghcr.io/alvoc/alvoc:latest\n</code></pre>"},{"location":"#what-is-alvoc","title":"What is Alvoc?","text":"<p>Alvoc is a command-line tool designed to analyze viral sequencing data with a focus on identifying variants of concern and their defining mutations. With the ongoing rise of infectious diseases like SARS-CoV-2, monitoring and understanding viral evolution has become critical for researchers, public health officials, and laboratories.  </p>"},{"location":"#why-use-alvoc","title":"Why Use Alvoc?","text":"<ol> <li> <p>Lineage Identification </p> <ul> <li>Alvoc helps determine which viral lineages are present in your sequencing data. For example, it can identify emerging lineages like B.1.1.7 (Alpha) or P.1 (Gamma) for SARS-CoV-2.  </li> <li>Use Alvoc when you need to:  <ul> <li>Compare samples to known lineage-defining mutations.  </li> <li>Detect specific lineages in samples from an outbreak.  </li> <li>Include or exclude specific lineages (whitelisting/blacklisting).  </li> </ul> </li> </ul> </li> <li> <p>Mutation Detection </p> <ul> <li>Alvoc allows you to detect mutations in sequencing data with customizable depth thresholds.  </li> <li>Use this feature to:  <ul> <li>Find known or novel mutations in viral samples.  </li> <li>Focus on specific mutations like S:N501Y or E484K that are critical for vaccine efficacy or transmissibility.  </li> </ul> </li> </ul> </li> <li> <p>Amplicon Quality Assessment </p> <ul> <li>Viral sequencing often relies on amplicon-based approaches. Alvoc provides tools to assess amplicon metrics like coverage and GC content.  </li> <li>This helps ensure high-quality sequencing data for downstream analyses.  </li> </ul> </li> </ol>"},{"location":"#when-to-use-alvoc","title":"When to Use Alvoc?","text":"<p>You should use Alvoc if you are:  </p> <ul> <li>A researcher analyzing viral sequencing data to study genetic variation and evolution.  </li> <li>A public health analyst monitoring variants of concern during outbreaks.  </li> <li>A bioinformatician processing large-scale sequencing data to identify mutations and lineages.  </li> <li>A laboratory scientist validating amplicon-based sequencing data for accuracy.  </li> </ul> <p>Alvoc simplifies these workflows into a set of streamlined commands, saving time and improving consistency across analyses.  </p>"},{"location":"#license","title":"License","text":"<p>This project is licensed under the terms of the MIT license.</p>"},{"location":"changelog/","title":"Changelog","text":""},{"location":"changelog/#032-2025-04-01","title":"0.3.2 (2025-04-01)","text":""},{"location":"changelog/#fix","title":"Fix","text":"<ul> <li>add missing requests dependency</li> </ul>"},{"location":"changelog/#031-2025-02-10","title":"0.3.1 (2025-02-10)","text":""},{"location":"changelog/#fix_1","title":"Fix","text":"<ul> <li>ensure docs and pr ci dont run on commit bump</li> <li>ensure ci publishes on tag release</li> </ul>"},{"location":"changelog/#030-2025-02-10","title":"0.3.0 (2025-02-10)","text":""},{"location":"changelog/#feat","title":"Feat","text":"<ul> <li>add make_constellations command for generating nextstrain based constellations</li> <li>add generic make_constellations file</li> </ul>"},{"location":"changelog/#fix_2","title":"Fix","text":"<ul> <li>cli: resolve version command f-string error</li> </ul>"},{"location":"changelog/#020-2024-12-16","title":"0.2.0 (2024-12-16)","text":""},{"location":"changelog/#fix_3","title":"Fix","text":"<ul> <li>examples: patch newline stripping on lineage download</li> <li>README.md: patch documentation link</li> </ul>"},{"location":"changelog/#010-2024-07-18","title":"0.1.0 (2024-07-18)","text":""},{"location":"changelog/#feat_1","title":"Feat","text":"<ul> <li>initial commit</li> </ul>"},{"location":"constellations/","title":"Constellations","text":""},{"location":"constellations/#what-are-constellations","title":"What are constellations?","text":"<p>A key requirement for the <code>find-lineages</code> command is is a json input file containing lineage-centric data. We use the term \"constellations\" to convey how lineage-defining mutations are organized. Constellations should include a list of site mutations in nucleotide format.</p>"},{"location":"constellations/#constellation-format","title":"Constellation Format","text":"<p>Currently our constellation format looks like this:</p> <pre><code>   {\n     \"A.23.1\": {\n        \"lineage\": \"A.23.1\",\n        \"label\": \"A.23.1-like\",\n        \"description\": \"A.23.1 lineage defining mutations\",\n        \"sources\": [],\n        \"tags\": [\n            \"A.23.1\"\n        ],\n        \"sites\": [\n            \"C4573T\",\n            \"C8782T\",\n            \"C10747T\",\n            \"G11230T\",\n            \"G11266T\",\n            \"G11521T\",\n            \"C16575T\",\n            \"C17745T\",\n            \"C22000T\",\n            \"C22033A\",\n            \"G22661T\",\n            \"G23401T\",\n            \"C23604G\",\n            \"T24097C\",\n            \"T28144C\",\n            \"G28167A\",\n            \"G28378C\",\n            \"G28878A\",\n            \"G29742A\"\n        ],\n        \"note\": \"Unique mutations for sublineage\"\n    },\n    ...\n   }\n</code></pre> <p>Typically these are going to have to be custom to your experiment, but we provide the <code>constellations</code>command to simplify this procedure. It comes with 2 subcommands for generating constellations, either based on a provided nextstrain tree url, or from a multiple sequence alignment. For most cases, we typically recommend generating your own multiple sequence alignment, since Nexstrain has a limited set of pathogens.In addition, it may not capture all the lineage data necessary for your experiment.</p> alvoc constellations  Usage: alvoc constellations [OPTIONS] COMMAND [ARGS]...                                                      Tools to make constellations                                                                                \u256d\u2500 Options \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\u2502 --help          Show this message and exit.                                                               \u2502\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\u256d\u2500 Commands \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\u2502 nextstrain   Generates constellations using the provided nextstrain phylogeny dataset.                    \u2502\u2502 msa          Generates constellations using a custom MSA FASTA file.                                      \u2502\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f <p>Note</p> <p>We also provide some example scripts for Sars-CoV-2 Pango lineage  constellations.</p>"},{"location":"constellations/#generating-an-msa-for-constellation-creation","title":"Generating an MSA for Constellation Creation","text":"<p>When using the <code>alvoc constellations msa</code> subcommand, you need to supply a multiple\u2010sequence alignment (MSA) in FASTA format that contains all reference genomes (or representative sequences) from the lineages you wish to capture. Below is a step\u2010by\u2010step guide for building such an MSA using common tools (e.g., MAFFT), along with recommendations on sequence selection and basic quality checks.</p>"},{"location":"constellations/#1-collect-reference-sequences","title":"1. Collect Reference Sequences","text":"<ol> <li> <p>Decide which genomes to include.    Typically, you\u2019ll want:</p> </li> <li> <p>A \u201creference\u201d genome (e.g., the earliest complete genome for your virus of interest, such as Wuhan\u2010Hu\u20101 for SARS\u2010CoV\u20102).</p> </li> <li>One or more representative sequences from each lineage or clade you care about. These can be downloaded from GenBank or GISAID.</li> <li> <p>Optional: Include outgroup sequences (closely\u2010related species/strains) if you want to root the tree.</p> </li> <li> <p>Assemble them into a single FASTA file.    For instance, create a file named <code>references.fasta</code> containing entries like:</p> </li> </ol> <p>```fasta</p> <p>Wuhan-Hu-1|NC_045512.2    ATTAAAGGTTT... (complete reference sequence) LineageA.23.1_rep1|MW123456.1    ATGTTGGTTT... (sequence from a representative of A.23.1) LineageB.1.1.7_rep1|MW654321.1    ATTTAGTGTT... (sequence from B.1.1.7, etc.)    ```</p> <p>Make sure each header is unique and includes enough metadata (accession or lineage name) to identify the sequence later.</p>"},{"location":"constellations/#2-run-mafft-to-create-the-alignment","title":"2. Run MAFFT to Create the Alignment","text":"<p>MAFFT is a widely\u2010used aligner for viral genomes because it handles large numbers of sequences quickly and accurately.</p> <ol> <li>Install MAFFT (if not already available). For example, on Ubuntu:</li> </ol> <p><code>bash    sudo apt-get update &amp;&amp; sudo apt-get install mafft</code></p> <p>Or via conda:</p> <p><code>bash    conda install -c bioconda mafft</code></p> <ol> <li>Execute MAFFT with sensible parameters.    A common invocation for full\u2010length viral genomes is:</li> </ol> <p><code>bash    mafft --auto references.fasta &gt; references_aligned.fasta</code></p> <ul> <li><code>--auto</code> lets MAFFT pick the best algorithm based on your dataset size.</li> <li> <p>If you have many (e.g., &gt;100) long genomes, you might replace <code>--auto</code> with <code>--thread 8 --retree 2 --maxiterate 1000</code>. For example:</p> <p><code>bash  mafft --thread 8 --retree 2 --maxiterate 1000 references.fasta &gt; references_aligned.fasta</code></p> </li> <li> <p>Inspect the output.    Open <code>references_aligned.fasta</code> in any alignment viewer (e.g., AliView, Jalview, or even a text editor) and check that:</p> </li> <li> <p>All sequences have roughly the same length.</p> </li> <li>There are no large blocks of gaps at one end (indicative of truncated sequences).</li> <li>Highly divergent sequences still align sensibly (no spuriously long insertions).</li> </ul>"},{"location":"constellations/#3-optional-trim-or-mask-lowconfidence-regions","title":"3. (Optional) Trim or Mask Low\u2010Confidence Regions","text":"<p>Depending on your downstream analysis and how varied your input set is, you may want to remove poorly aligned regions:</p> <ol> <li> <p>Identify regions with excessive gaps.    For example, if more than 50% of sequences have a gap at a given position, you might mask that column.</p> </li> <li> <p>Use a simple script or tool (e.g., trimAl) to perform automated trimming.    Example with trimAl:</p> </li> </ol> <p><code>bash    trimal -in references_aligned.fasta -out references_aligned_trimmed.fasta \\          -automated1</code></p> <ul> <li> <p><code>-automated1</code> applies a default trimming strategy suitable for most alignments.</p> </li> <li> <p>Double\u2010check your trimmed FASTA.    Ensure that no essential genomic regions (e.g., S gene for SARS\u2010CoV\u20102) were accidentally clipped.</p> </li> </ul>"},{"location":"constellations/#4-validate-the-final-msa","title":"4. Validate the Final MSA","text":"<p>Before feeding the MSA into <code>alvoc constellations msa</code>, run a quick sanity check:</p> <ul> <li>Sequence lengths should be consistent.</li> </ul> <p><code>bash   awk '/^&gt;/ {if (seqlen){print seqlen}; seqlen=0; next;} {seqlen += length($0);} END{print seqlen}' \\       references_aligned_trimmed.fasta | sort -nu</code></p> <ul> <li> <p>All printed lengths should be the same (or very close if you intentionally kept variable\u2010length UTRs/gaps).</p> </li> <li> <p>Look for unexpected characters.   Make sure there are only <code>A, T, G, C, N, -</code> (and possibly lowercase) in your FASTA. No spurious symbols like <code>*</code> or spaces.</p> </li> </ul>"},{"location":"constellations/#5-run-alvoc-constellations-msa","title":"5. Run <code>alvoc constellations msa</code>","text":"<p>Once you have a validated MSA (e.g., <code>references_aligned_trimmed.fasta</code>), call the constellations subcommand. Ensure you specify your header delimeter and clade field index so the algorithm correctly groups your constellations:</p> <pre><code>alvoc constellations msa \\\n    references_aligned_trimmed.fasta \\\n    -o constellations\n    -cd '|' \\\n    -cf 0\n</code></pre> <p>After this runs, you\u2019ll get a directory as specified by the output parameter, containing a <code>constellations.json</code> file that specifies lineage\u2010specific site mutations derived from your MSA.</p> <pre><code>constellations/\n\u251c\u2500\u2500 constellations.json\n\u251c\u2500\u2500 constellations.json.sha256\n\u251c\u2500\u2500 constellations.manifest.json\n\u2514\u2500\u2500 lineages.txt\n</code></pre> <p>This JSON can then be passed into <code>alvoc find-lineages</code> or <code>alvoc find-mutants</code>.</p>"},{"location":"constellations/#6-tips-best-practices","title":"6. Tips &amp; Best Practices","text":"<ul> <li> <p>Use a consistent reference sequence.   All coordinates in downstream mutation files are referenced against the same genome. If you align to Wuhan\u2010Hu-1 (NC_045512.2), make sure all coordinates reported by Alvoc are interpretable relative to that locus.</p> </li> <li> <p>Keep your input FASTA headers simple yet unique.   Avoid spaces or special characters; use underscores (<code>_</code>) or pipes (<code>|</code>) instead. The <code>--metadata</code> CSV will match on the exact header line (everything after the <code>&gt;</code>), so they must correspond exactly.</p> </li> <li> <p>Document your MSA parameters.   If you plan to compare constellations across different runs, note which MAFFT flags (e.g., <code>--auto</code> vs.\\ <code>--globalpair</code>) you used. Small differences in alignment can lead to slight shifts in how site mutations are called.</p> </li> <li> <p>Re\u2010use alignments whenever possible.   If you expect to add new lineages or update an existing constellation, simply append new sequences to your old <code>references.fasta</code> and re\u2010align. You can keep your previous <code>--metadata</code> CSV and only add rows for the new headers.</p> </li> </ul>"},{"location":"dev/","title":"Developer Guide","text":"<p>This guide covers everything you need to know about developing alvoc.</p>"},{"location":"dev/#project-structure","title":"Project Structure","text":"<p>The project is organized as follows:</p> <pre><code>alvoc/\n\u251c\u2500\u2500 alvoc/              # Main package source code\n\u2502   \u251c\u2500\u2500 cli/           # Command line interface\n\u2502   \u251c\u2500\u2500 core/          # Core functionality\n\u2502   \u2502   \u251c\u2500\u2500 amplicons/    # Amplicon analysis\n\u2502   \u2502   \u251c\u2500\u2500 constellations/  # Constellation management\n\u2502   \u2502   \u251c\u2500\u2500 utils/          # Shared utilities\n\u2502   \u2502   \u2514\u2500\u2500 variants/       # Variant analysis\n\u2502   \u2514\u2500\u2500 main.py         # Entry point\n\u251c\u2500\u2500 docs/              # Documentation\n\u251c\u2500\u2500 examples/          # Example scripts\n\u2514\u2500\u2500 tests/             # Test suite\n</code></pre>"},{"location":"dev/#key-components","title":"Key Components","text":"<ul> <li>CLI Module (<code>alvoc/cli/</code>): Handles command-line interface using Typer. </li> <li>Core Module (<code>alvoc/core/</code>): </li> <li><code>amplicons/</code>: Amplicon metrics and visualization</li> <li><code>constellations/</code>: Mutation constellation management</li> <li><code>variants/</code>: Variant/lineage analysis</li> <li><code>utils/</code>: Shared utilities like logging and file handling</li> </ul>"},{"location":"dev/#development-setup","title":"Development Setup","text":"<ol> <li>Clone the repository:</li> </ol> <pre><code>git clone https://github.com/alvoc/alvoc\ncd alvoc\n</code></pre> <ol> <li>Install development dependencies:</li> </ol> <pre><code>uv sync\n</code></pre>"},{"location":"dev/#development-workflow","title":"Development Workflow","text":""},{"location":"dev/#feature-branches","title":"Feature Branches","text":"<p>We follow a feature branch workflow:</p> <ol> <li>Create a new branch for your feature/fix:</li> </ol> <pre><code>git checkout -b feature/your-feature-name\n# or\ngit checkout -b fix/your-bug-fix\n</code></pre> <ol> <li> <p>Make your changes, commit them using Commitizen (see below)</p> </li> <li> <p>Keep your branch up to date with main if others are working on the repository as well:</p> </li> </ol> <pre><code>git fetch origin\ngit rebase origin/main\n</code></pre> <ol> <li>Push your changes:</li> </ol> <pre><code>git push origin feature/your-feature-name\n</code></pre> <ol> <li>Create a Pull Request on GitHub</li> </ol>"},{"location":"dev/#writing-commits","title":"Writing Commits","text":"<p>We use Commitizen to ensure consistent commit messages that follow the Conventional Commits specification. This helps with automatic versioning and changelog generation.</p> <ol> <li>Install Commitizen:</li> </ol> <pre><code>uv sync\n</code></pre> <ol> <li>Stage your changes:</li> </ol> <pre><code>git add .\n</code></pre> <ol> <li>Instead of <code>git commit</code>, use:</li> </ol> <pre><code>uv run cz c\n</code></pre> <ol> <li>Follow the interactive prompts:</li> <li>Type: Select the type of change (feat, fix, docs, etc.)</li> <li>Scope: Enter the scope of change (cli, core, docs, etc.)</li> <li>Subject: Write a short, imperative mood description</li> <li>Body: Optionally provide more detailed description</li> <li>Breaking: Indicate if there are breaking changes -&gt; typically this will increment the major version of the tool</li> <li>Issues: Optionally, reference any related issues</li> </ol> <p>Example commit types: - <code>feat</code>: New feature - <code>fix</code>: Bug fix - <code>docs</code>: Documentation changes - <code>style</code>: Code style changes (formatting, semicolons, etc.) - <code>refactor</code>: Code changes that neither fix a bug nor add a feature - <code>perf</code>: Performance improvements - <code>test</code>: Adding missing tests - <code>chore</code>: Changes to build process or auxiliary tools</p> <p>An example commit message generated by commitizen:</p> <pre><code>feat(core): add support for custom header parsing in MSADataSource\n\nAdded flexible header parsing capabilities to MSADataSource class to support\ndifferent FASTA header formats. Users can now provide custom parsing functions.\n\nBREAKING CHANGE: MSADataSource constructor now requires additional parameters\n</code></pre>"},{"location":"dev/#running-tests","title":"Running Tests","text":"<p>We use pytest for testing. The test suite is in the <code>tests/</code> directory.</p> <p>To run tests:</p> <pre><code>pytest\n</code></pre> <p>Key testing guidelines: - Place tests in the <code>tests/</code> directory - Name test files with <code>test_</code> prefix - Use fixtures for reusable test components - Mock external dependencies using <code>unittest.mock</code></p> <p>Example of a good test:</p> <pre><code>@pytest.fixture\ndef mock_seq_record():\n    features = [\n        SeqFeature(\n            FeatureLocation(start=0, end=10),\n            type=\"gene\",\n            qualifiers={\"gene\": [\"gene1\"]},\n        )\n    ]\n    return SeqRecord(Seq(\"ATGC\"), id=\"test_id\", features=features)\n\ndef test_extract_gene_info(mock_seq_record):\n    expected = {\"gene1\": [0, 10]}\n    result = extract_gene_info(mock_seq_record)\n    assert result == expected\n</code></pre>"},{"location":"dev/#documentation","title":"Documentation","text":"<p>Documentation is built using MkDocs with the Material theme. If you have UV installed, you can use our makefile to streamline this process</p>"},{"location":"dev/#local-development","title":"Local Development","text":"<ol> <li>Start the documentation server:</li> </ol> <pre><code>make docs-start\n</code></pre> <ol> <li>View at http://127.0.0.1:8000</li> </ol>"},{"location":"dev/#writing-documentation","title":"Writing Documentation","text":"<ul> <li>Documentation source files are in <code>docs/</code></li> <li>Use Markdown format</li> <li>API reference is auto-generated from docstrings</li> <li>Add new pages to <code>mkdocs.yml</code> under <code>nav:</code></li> </ul>"},{"location":"dev/#release-process","title":"Release Process","text":"<p>Whenever you push a change to main, our CI/CD pipelines will automatically parse through commits and bump the version as required. Note that currently, alvoc will not increment past the major version number 0. To disable that behaviour, you can edit the pyproject.toml file:</p> <pre><code>major_version_zero = true # -&gt; set this to false\n</code></pre> <p>The release goes through the followings steps:</p> <ol> <li>Testing: </li> <li>Runs on pull requests and pushes to main</li> <li>Executes test suite</li> <li> <p>Checks code formatting</p> </li> <li> <p>Documentation:</p> </li> <li>Builds and deploys documentation on merge to main</li> <li> <p>Deploys to GitHub Pages</p> </li> <li> <p>Release:</p> </li> <li>Triggered by new version tags</li> <li>Builds and publishes package to PyPI</li> <li>Builds and publishes Docker image to GHCR</li> <li>Updates documentation</li> </ol>"},{"location":"dev/#docker-support","title":"Docker Support","text":"<p>The project includes multi-stage Dockerfile:</p> <ol> <li>Base stage with Python environment</li> <li>Build stage for dependencies</li> <li>Runtime stage for minimal production image</li> </ol> <p>Build the Docker image:</p> <pre><code>docker build -t alvoc .\n</code></pre> <p>Run the container:</p> <pre><code>docker run -it --rm alvoc\n</code></pre>"},{"location":"dev/#best-practices","title":"Best Practices","text":"<ol> <li> <p>Code Style:</p> <ul> <li>Follow PEP 8</li> <li>Use type hints</li> <li>Document functions with docstrings</li> </ul> </li> <li> <p>Git Workflow:</p> <ul> <li>Use feature branches</li> <li>Write meaningful commit messages following Conventional Commits</li> <li>Keep commits atomic and focused</li> </ul> </li> <li> <p>Testing:</p> <ul> <li>Write tests for new features</li> <li>Maintain good test coverage</li> <li>Mock external dependencies</li> </ul> </li> <li> <p>Documentation:</p> <ul> <li>Keep API docs up-to-date</li> <li>Document complex procedures</li> <li>Include examples</li> </ul> </li> </ol>"},{"location":"reference/","title":"CLI Reference","text":""},{"location":"reference/#alvoc","title":"alvoc","text":"<p>Abundance learning for variants of concern</p> <p>Usage:</p> <pre><code>alvoc [OPTIONS] COMMAND [ARGS]...\n</code></pre> <p>Options:</p> Name Type Description Default <code>--version</code> boolean Current version of Alvoc None <code>--install-completion</code> boolean Install completion for the current shell. None <code>--show-completion</code> boolean Show completion for the current shell, to copy it or customize the installation. None <code>--help</code> boolean Show this message and exit. <code>False</code> <p>Subcommands</p> <ul> <li>amplicons: Get amplicon metrics such as coverage, gc_content and visualizations</li> <li>constellations: Tools to make constellations</li> <li>convert: Tools to convert mutations</li> <li>extract-gene-data: Extracts gene coordinates and the genome sequence from a GenBank file or generates them using an Entrez API search term.</li> <li>find-lineages: Find lineages in samples</li> <li>find-mutants: Find mutations in sequencing data, either from BAM files or a sample list.</li> </ul>"},{"location":"reference/#amplicons","title":"amplicons","text":"<p>Get amplicon metrics such as coverage, gc_content and visualizations</p> <p>Usage:</p> <pre><code>alvoc amplicons [OPTIONS] VIRUS SAMPLES INSERTS_PATH\n</code></pre> <p>Options:</p> Name Type Description Default <code>--outdir</code>, <code>-o</code> text Output directory for results and intermediate data <code>.</code> <code>--help</code> boolean Show this message and exit. <code>False</code>"},{"location":"reference/#constellations","title":"constellations","text":"<p>Tools to make constellations</p> <p>Usage:</p> <pre><code>alvoc constellations [OPTIONS] COMMAND [ARGS]...\n</code></pre> <p>Options:</p> Name Type Description Default <code>--help</code> boolean Show this message and exit. <code>False</code> <p>Subcommands</p> <ul> <li>msa: Generates constellations using a custom MSA FASTA file.</li> <li>nextstrain: Generates constellations using the provided nextstrain phylogeny dataset.</li> </ul>"},{"location":"reference/#msa","title":"msa","text":"<p>Generates constellations using a custom MSA FASTA file.</p> <p>Usage:</p> <pre><code>alvoc constellations msa [OPTIONS] FASTA\n</code></pre> <p>Options:</p> Name Type Description Default <code>--proportion_threshold</code>, <code>-pt</code> float Minimum proportion of nodes in a clade required to include a mutation <code>0.9</code> <code>--clade-delim</code>, <code>-cd</code> text Delimiter character/string to split each FASTA header on None <code>--clade-field</code>, <code>-cf</code> integer Zero-based field index, after splitting on --clade-delim, that contains the clade name None <code>--outdir</code>, <code>-o</code> path Output directory for constellations <code>.</code> <code>--help</code> boolean Show this message and exit. <code>False</code>"},{"location":"reference/#nextstrain","title":"nextstrain","text":"<p>Generates constellations using the provided nextstrain phylogeny dataset.</p> <p>Usage:</p> <pre><code>alvoc constellations nextstrain [OPTIONS] TREE_URL\n</code></pre> <p>Options:</p> Name Type Description Default <code>--proportion_threshold</code>, <code>-pt</code> integer Minimum proportion of nodes in a clade required to include a mutation <code>0.9</code> <code>--outdir</code>, <code>-o</code> text Output directory for results and intermediate data <code>.</code> <code>--help</code> boolean Show this message and exit. <code>False</code>"},{"location":"reference/#convert","title":"convert","text":"<p>Tools to convert mutations</p> <p>Usage:</p> <pre><code>alvoc convert [OPTIONS] COMMAND [ARGS]...\n</code></pre> <p>Options:</p> Name Type Description Default <code>--help</code> boolean Show this message and exit. <code>False</code> <p>Subcommands</p> <ul> <li>aa: Convert amino acid mutation to nucleotide mutations for a given virus.</li> <li>nt: Convert nucleotide mutation to amino acid mutation for a given virus.</li> </ul>"},{"location":"reference/#aa","title":"aa","text":"<p>Convert amino acid mutation to nucleotide mutations for a given virus.</p> <p>Usage:</p> <pre><code>alvoc convert aa [OPTIONS] VIRUS MUT\n</code></pre> <p>Options:</p> Name Type Description Default <code>--outdir</code>, <code>-o</code> text Output directory for results and intermediate data <code>.</code> <code>--help</code> boolean Show this message and exit. <code>False</code>"},{"location":"reference/#nt","title":"nt","text":"<p>Convert nucleotide mutation to amino acid mutation for a given virus.</p> <p>Usage:</p> <pre><code>alvoc convert nt [OPTIONS] VIRUS MUT\n</code></pre> <p>Options:</p> Name Type Description Default <code>--outdir</code>, <code>-o</code> text Output directory for results and intermediate data <code>.</code> <code>--help</code> boolean Show this message and exit. <code>False</code>"},{"location":"reference/#extract-gene-data","title":"extract-gene-data","text":"<p>Extracts gene coordinates and the genome sequence from a GenBank file or generates them using an Entrez API search term.</p> <p>Usage:</p> <pre><code>alvoc extract-gene-data [OPTIONS] VIRUS\n</code></pre> <p>Options:</p> Name Type Description Default <code>--outdir</code>, <code>-o</code> text Output directory for results and intermediate data <code>.</code> <code>--help</code> boolean Show this message and exit. <code>False</code>"},{"location":"reference/#find-lineages","title":"find-lineages","text":"<p>Find lineages in samples</p> <p>Usage:</p> <pre><code>alvoc find-lineages [OPTIONS] VIRUS SAMPLES CONSTELLATIONS\n</code></pre> <p>Options:</p> Name Type Description Default <code>--white-list</code>, <code>-wl</code> path Path to a TXT file containing lineages to inclue. None <code>--black-list</code>, <code>-bl</code> path Path to a TXT file containing lineages to exclude. None <code>--min-depth</code>, <code>-d</code> integer Minimum depth for a mutation to be considered. <code>40</code> <code>--unique</code>, <code>-u</code> boolean Whether to consider unique mutations only. <code>False</code> <code>--l2</code>, <code>-l2</code> boolean Whether to use a secondary method for regression analysis. <code>False</code> <code>--outdir</code>, <code>-o</code> text Output directory for results and intermediate data <code>.</code> <code>--help</code> boolean Show this message and exit. <code>False</code>"},{"location":"reference/#find-mutants","title":"find-mutants","text":"<p>Find mutations in sequencing data, either from BAM files or a sample list.</p> <p>Usage:</p> <pre><code>alvoc find-mutants [OPTIONS] VIRUS SAMPLES CONSTELLATIONS MUTATIONS\n</code></pre> <p>Options:</p> Name Type Description Default <code>--min-depth</code>, <code>-d</code> integer Minimum depth <code>10</code> <code>--outdir</code>, <code>-o</code> text Output directory for results and intermediate data <code>.</code> <code>--help</code> boolean Show this message and exit. <code>False</code>"},{"location":"usage/","title":"Usage","text":"<p>This guide explains how to use Alvoc, highlighting key features, input formats, and examples. It assumes you've already installed the tool. If not, please the installation instructions.</p> <p>With Alvoc, you can quickly move from raw sequencing data to actionable insights about viral mutations and lineages.</p>"},{"location":"usage/#pre-requisites","title":"Pre-requisites","text":"<p>Alvoc, like many other downstream analysis tools, requires you to have some upstream data to unlock its functionality. There are 2 main requirements for the core commands:</p> <ol> <li> <p>A <code>GB</code> (genbank) file for a complete genome of the virus to analyze, or an Entrez api search term. Please see the Extracting Gene Data section for a brief on how this works.</p> </li> <li> <p>A sorted <code>BAM</code> file, or a <code>CSV</code> samplesheet listing samples and absolute paths to the BAM files. An example csv file:</p> </li> </ol> sample bam sample1 /absolute/path/to/sample1.bam sample2 /absolute/path/to/sample2.bam"},{"location":"usage/#first-steps","title":"First steps","text":"<p>Alvoc comes with a variety of tools to help you with abundance learning. Take a gander by running the <code>help</code> flag to see a general help message:</p> alvoc --help Usage: alvoc [OPTIONS] COMMAND [ARGS]...                                                                                                                                                                                                                    Abundance learning for variants of concern                                                                                                                                                                                                                 \u256d\u2500 Options \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\u2502 --version                     Current version of Alvoc                                                                                                                                                                                                   \u2502\u2502 --install-completion          Install completion for the current shell.                                                                                                                                                                                  \u2502\u2502 --show-completion             Show completion for the current shell, to copy it or customize the installation.                                                                                                                                           \u2502\u2502 --help                        Show this message and exit.                                                                                                                                                                                                \u2502\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\u256d\u2500 Commands \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\u2502 find-lineages       Find lineages in samples                                                                                                                                                                                                             \u2502\u2502 find-mutants        Find mutations in sequencing data, either from BAM files or a sample list.                                                                                                                                                           \u2502\u2502 extract-gene-data   Extracts gene coordinates and the genome sequence from a GenBank file or generates them using an Entrez API search term.                                                                                                             \u2502\u2502 amplicons           Get amplicon metrics such as coverage, gc_content and visualizations                                                                                                                                                                 \u2502\u2502 convert             Tools to convert mutations                                                                                                                                                                                                           \u2502\u2502 constellations      Tools to make constellations                                                                                                                                                                                                         \u2502\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f"},{"location":"usage/#extracting-gene-data","title":"Extracting Gene Data","text":"<p>Before we take a look at some of the core commands, it is important to understand some of Alvoc's internals. Each command requires gene coordinates and sequence data. We can extract this from genbank files, or we can auto-fetch the data for you using an Entrez search term.</p>"},{"location":"usage/#a-brief-on-the-entrez-api","title":"A brief on the Entrez API","text":"<p>The Entrez API (E-utilities) is a tool provided by the NCBI to interact with its biological databases, such as GenBank and PubMed. It allows you to search for IDs, retrieve data like sequences, and link related records across databases. We use this internally to download a genbank file programatically.</p> <p>You can test how it works using the following examples to get a feel for it:</p> <ol> <li>Access by accession id:</li> </ol> alvoc extract-gene-data NC_045512.2 <ol> <li>You can also just search by taxid, although you need to pass it like this:</li> </ol> alvoc extract-gene-data  \"txid2697049[Organism:exp]\" <ol> <li>Sometimes you want to be even more specific</li> </ol> alvoc extract-gene-data  \"txid2697049[Organism:exp] AND \\\"Wuhan-Hu-1\\\" AND complete genome\" <p>Note</p> <p>Every command in alvoc requires this input or alternatively a genbank file. In general, we recommend using the accession ID for data retrieval, as it is the most straightforward and unambiguous approach. However, the Entrez API is subject to rate limiting, so if you plan on performing multiple successive analyses, we recommend downloading the desired genbank file and supplying it in place of the accession ID.</p>"},{"location":"usage/#finding-lineages","title":"Finding Lineages","text":"<p>The <code>find-lineages</code> command identifies viral lineages from sequencing data. Running it will output a lineage abundance heatmap and two csv files. To get started, you'll need your reference genome, a samplesheet listing your bam files, and a constellations file. See the constellations section for more details.</p>"},{"location":"usage/#command-example","title":"Command Example","text":"alvoc find-lineages some_accession_id samples.csv constellations.json --outdir ./results"},{"location":"usage/#finding-mutations","title":"Finding Mutations","text":"<p>The <code>find-mutants</code> command identifies specific mutations from sequencing and outputs a csv file containing occurences and non-occurences of each mutation, alongside a heatmap.</p>"},{"location":"usage/#command-example_1","title":"Command Example","text":"alvoc find-mutants virus.gb  samples.csv constellations.json mutations.txt --outdir ./results <p>Here's what the mutations.txt file might look like</p> <pre><code>S:N501Y\nG23012A\n</code></pre>"},{"location":"usage/#amplicon-metrics","title":"Amplicon Metrics","text":"<p>The <code>amplicons</code> command analyzes amplicon metrics like coverage and GC content. You'll need to provide:</p> <p>A <code>BED</code> file, containing your inserts of interest. For example:</p> <pre><code>MN908947.3  50  408 SARS-CoV-2_INSERT_1 1   +\nMN908947.3  344 705 SARS-CoV-2_INSERT_2 2   +\nMN908947.3  666 1017    SARS-CoV-2_INSERT_3 1   +\n</code></pre>"},{"location":"usage/#command-example_2","title":"Command Example","text":"alvoc amplicons virus.gb samples.csv inserts.bed --outdir ./results"},{"location":"usage/#tools","title":"Tools","text":""},{"location":"usage/#converting-mutations","title":"Converting Mutations","text":"<p>The <code>convert</code> command transforms mutations between formats.</p>"},{"location":"usage/#amino-acid-to-nucleotide","title":"Amino Acid to Nucleotide","text":"alvoc convert aa virus S:N501Y"},{"location":"usage/#nucleotide-to-amino-acid","title":"Nucleotide to Amino Acid","text":"alvoc convert nt virus G23012A"}]}