name: Release

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Base Setup
        uses: ./.github/workflows/actions/setup-base
        with:
          environment: dev
          shell: bash

      - name: Run tests
        run: poetry run pytest

  bump-version:
    runs-on: ubuntu-latest
    needs: tests

    permissions:
      # Give the default GITHUB_TOKEN write permission to commit and push the changed files back to the repository.
      contents: write

    outputs:
      version: ${{ steps.cz.outputs.version }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0 # Important to fetch all history for version calculation
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - id: cz
        name: Create bump and changelog
        uses: commitizen-tools/commitizen-action@0.21.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          changelog_increment_filename: body.md
      
      - id: repo-basename
        run: |
            echo "value=`basename ${{ github.repository }}`" >> $GITHUB_OUTPUT
        shell: bash
    
      - name: Update README
        run: python scripts/create_readme.py assets/template-README.md README.md --project_title "Alvoc" --project_organization ${{ github.repository_owner }} --project_repo ${{ steps.repo-basename.outputs.value }} --project_version ${{steps.cz.outputs.version}} --project_documentation_url "https://${{ github.repository.owner}}.github.io"

      - name: Print Version
        run: echo "Bumped to version ${{ steps.cz.outputs.version }}"

      - uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "docs(readme.md): Bump version in README to ${{steps.cz.outputs.version}}"

  build-executables:
    runs-on: ${{ matrix.os }}
    needs: bump-version
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    outputs:
      version: ${{ needs.bump-version.outputs.version }}

    steps:
      - name: Base Setup
        uses: ./.github/workflows/actions/setup-base
        with:
          environment: prod
          shell: ${{ matrix.os == 'windows-latest' && 'pwsh' || 'bash' }}

      - name: Get pyinstaller
        run: poetry add pyinstaller

      - name: Build binary
        run: pyinstaller alvoc/cli.py --name alvoc-${{ matrix.os }}-${{ needs.bump-version.outputs.version }} --collect-submodules shellingham

      - name: Archive binary
        uses: actions/upload-artifact@v2
        with:
          name: alcov-${{ matrix.os }}-${{ needs.bump-version.outputs.version }}
          path: dist/

  publish-release:
    needs: build-executables
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v2
        with:
          path: dist/

      - name: Publish release
        uses: softprops/action-gh-release@v1
        with:
          body_path: body.md
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
