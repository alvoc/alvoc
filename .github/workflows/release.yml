name: Release

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write
      
jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Base Setup
        uses: ./.github/workflows/actions/setup-base
        with:
          environment: dev
          shell: bash

      - name: Run tests
        run: poetry run pytest

  bump-version:
    if: "!startsWith(github.event.head_commit.message, 'bump:')"
    runs-on: ubuntu-latest
    needs: tests
      
    outputs:
      version: ${{ steps.cz.outputs.version }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - id: cz
        name: Create bump and changelog
        uses: commitizen-tools/commitizen-action@0.21.0
        with:
          github_token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          changelog_increment_filename: body.md
      
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          body_path: "body.md"
          tag_name: ${{ steps.cz.outputs.version }}

  # pypi-publish:
  #   name: Upload release to PyPI
  #   runs-on: ubuntu-latest
  #   needs: bump-version

  #   environment:
  #     name: pypi
  #     url: https://pypi.org/p/alvoc
  #   permissions:
  #     id-token: write 

  #   steps:
  #   - name: Checkout repo
  #     uses: actions/checkout@v4
  
  #   - name: Base Setup
  #     uses: ./.github/workflows/actions/setup-base
  #     with:
  #       environment: prod
  #       shell: bash

  #   - name: Build the package
  #     shell: bash
  #     run: |
  #       poetry build

  #   - name: Publish package distributions to PyPI
  #     uses: pypa/gh-action-pypi-publish@release/v1

  # build-executables:
  #   runs-on: ${{ matrix.os }}
  #   needs: bump-version
  #   strategy:
  #     matrix:
  #       os: [macos-latest, ubuntu-latest]

  #   outputs:
  #     version: ${{ needs.bump-version.outputs.version }}

  #   steps:
  #     - name: Checkout repo
  #       uses: actions/checkout@v4
    
  #     - name: Base Setup
  #       uses: ./.github/workflows/actions/setup-base
  #       with:
  #         environment: prod
  #         shell: bash

  #     - name: Get pyinstaller
  #       run: poetry add pyinstaller

  #     - name: Build executable
  #       run: poetry run pyinstaller alvoc/cli.py --name alvoc-${{ matrix.os }}-${{ needs.bump-version.outputs.version }} --collect-submodules shellingham

  #     - name: Zip executable
  #       run: zip -r dist/alvoc-${{ matrix.os }}-${{ needs.bump-version.outputs.version }}.zip dist/
    
  #     - name: Archive executable
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: alcov-${{ matrix.os }}-${{ needs.bump-version.outputs.version }}
  #         path: dist/

  # publish-release:
  #   needs: build-executables
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Download all artifacts
  #       uses: actions/download-artifact@v2
  #       with:
  #         path: dist/

  #     - name: Publish release
  #       uses: softprops/action-gh-release@v1
  #       with:
  #         tag_name: ${{ needs.build-executables.outputs.version }}
  #         files: dist/*